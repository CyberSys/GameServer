using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_effects : CollectionWrapperBase {
        #region Field Names
        public const string Name_InheritVelocity = "InheritVelocity";
        public const string Name_FogEnable = "FogEnable";
        public const string Name_AudioQuadratic = "AudioQuadratic";
        public const string Name_VisualCullDist = "VisualCullDist";
        public const string Name_0x20EF09CE = "0x20EF09CE";
        public const string Name_ConstantBm = "ConstantBm";
        public const string Name_InScatterMulitply = "InScatterMulitply";
        public const string Name_0x4C64ED7B = "0x4C64ED7B";
        public const string Name_0x53DE9F00 = "0x53DE9F00";
        public const string Name_BrMultiply = "BrMultiply";
        public const string Name_0x74EF4FC8 = "0x74EF4FC8";
        public const string Name_0x7BC5F444 = "0x7BC5F444";
        public const string Name_0x98DBA438 = "0x98DBA438";
        public const string Name_CollectionName = "CollectionName";
        public const string Name_ConstantBr = "ConstantBr";
        public const string Name_EmitterQuadratic = "EmitterQuadratic";
        public const string Name_emittergroup = "emittergroup";
        public const string Name_BmMultiply = "BmMultiply";
        public const string Name_FogG = "FogG";
        public const string Name_0xE82F96CF = "0xE82F96CF";
        #endregion

        public WORLD_effects(VLTCollection collection) : base(collection) {}

        #region Getters
        public VaultLib.Core.Types.Attrib.Types.Vector4 AudioQuadratic() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("AudioQuadratic");
        }
        public System.Single BmMultiply() {
            return GetValue<System.Single>("BmMultiply");
        }
        public System.Single BrMultiply() {
            return GetValue<System.Single>("BrMultiply");
        }
        public System.String CollectionName() {
            return GetValue<System.String>("CollectionName");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 ConstantBm() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("ConstantBm");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 ConstantBr() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("ConstantBr");
        }
        public VaultLib.CodeGen.RefSpecWrapper emittergroup() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("emittergroup");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 EmitterQuadratic() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("EmitterQuadratic");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x20EF09CE() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x20EF09CE");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x4C64ED7B() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x4C64ED7B");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x53DE9F00() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x53DE9F00");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x74EF4FC8() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x74EF4FC8");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x7BC5F444() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x7BC5F444");
        }
        public System.Single field_0x98DBA438() {
            return GetValue<System.Single>("0x98DBA438");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0xE82F96CF() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0xE82F96CF");
        }
        public System.Boolean FogEnable() {
            return GetValue<System.Boolean>("FogEnable");
        }
        public System.Single FogG() {
            return GetValue<System.Single>("FogG");
        }
        public System.Single InheritVelocity() {
            return GetValue<System.Single>("InheritVelocity");
        }
        public System.Single InScatterMulitply() {
            return GetValue<System.Single>("InScatterMulitply");
        }
        public System.Single VisualCullDist() {
            return GetValue<System.Single>("VisualCullDist");
        }
        #endregion

    }
}
