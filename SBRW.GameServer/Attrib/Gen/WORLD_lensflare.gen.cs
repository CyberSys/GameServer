using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_lensflare : CollectionWrapperBase {
        #region Field Names
        public const string Name_FixedRotation = "FixedRotation";
        public const string Name_Active = "Active";
        public const string Name_Colour_Edge = "Colour_Edge";
        public const string Name_Scale_Power = "Scale_Power";
        public const string Name_Scale_Mulpilier = "Scale_Mulpilier";
        public const string Name_Texture_Index = "Texture_Index";
        public const string Name_Stretch_Multiplier = "Stretch_Multiplier";
        public const string Name_Texture_Name = "Texture_Name";
        public const string Name_Position = "Position";
        public const string Name_MistakesSkiff = "MistakesSkiff";
        public const string Name_Rotation_Amount = "Rotation_Amount";
        public const string Name_Size = "Size";
        public const string Name_Stretch_Power = "Stretch_Power";
        #endregion

        public WORLD_lensflare(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Boolean Active() {
            return GetValue<System.Boolean>("Active");
        }
        public VaultLib.Core.Types.Attrib.Types.FloatColour Colour_Edge() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.FloatColour>("Colour_Edge");
        }
        public System.Boolean FixedRotation() {
            return GetValue<System.Boolean>("FixedRotation");
        }
        public VaultLib.Core.Types.Attrib.Types.FloatColour MistakesSkiff() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.FloatColour>("MistakesSkiff");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector2 Position() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector2>("Position");
        }
        public System.Single Rotation_Amount() {
            return GetValue<System.Single>("Rotation_Amount");
        }
        public System.Single Scale_Mulpilier() {
            return GetValue<System.Single>("Scale_Mulpilier");
        }
        public System.Single Scale_Power() {
            return GetValue<System.Single>("Scale_Power");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector2 Size() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector2>("Size");
        }
        public System.Single Stretch_Multiplier() {
            return GetValue<System.Single>("Stretch_Multiplier");
        }
        public System.Single Stretch_Power() {
            return GetValue<System.Single>("Stretch_Power");
        }
        public System.Int32 Texture_Index() {
            return GetValue<System.Int32>("Texture_Index");
        }
        public System.String Texture_Name() {
            return GetValue<System.String>("Texture_Name");
        }
        #endregion

    }
}
