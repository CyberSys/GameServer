using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_aud_world_reverb : CollectionWrapperBase {
        #region Field Names
        public const string Name_reverb_left_delay_lfo_depth = "reverb_left_delay_lfo_depth";
        public const string Name_0x0A2E28C8 = "0x0A2E28C8";
        public const string Name_reverb_left_hpf_frequency = "reverb_left_hpf_frequency";
        public const string Name_reverb_model1_sendleft_dry = "reverb_model1_sendleft_dry";
        public const string Name_reverb_model1_size = "reverb_model1_size";
        public const string Name_reverb_model1_sendright_dry = "reverb_model1_sendright_dry";
        public const string Name_0x3CE9D9BE = "0x3CE9D9BE";
        public const string Name_reverb_right_delay_time = "reverb_right_delay_time";
        public const string Name_reverb_left_lpf_frequency = "reverb_left_lpf_frequency";
        public const string Name_reverb_model1_brightness = "reverb_model1_brightness";
        public const string Name_reverb_model1_sendleft_wet = "reverb_model1_sendleft_wet";
        public const string Name_reverb_left_gain = "reverb_left_gain";
        public const string Name_reverb_left_delay_time = "reverb_left_delay_time";
        public const string Name_reverb_left_delay_feedback = "reverb_left_delay_feedback";
        public const string Name_reverb_pan_lfo_frequency = "reverb_pan_lfo_frequency";
        public const string Name_reverb_pan_lfo_depth = "reverb_pan_lfo_depth";
        public const string Name_reverb_model1_sendright_wet = "reverb_model1_sendright_wet";
        public const string Name_reverb_right_gain = "reverb_right_gain";
        public const string Name_reverb_right_delay_lfo_depth = "reverb_right_delay_lfo_depth";
        public const string Name_reverb_right_delay_lfo_frequency = "reverb_right_delay_lfo_frequency";
        public const string Name_blur_scalers = "blur_scalers";
        public const string Name_reverb_left_delay_lfo_frequency = "reverb_left_delay_lfo_frequency";
        public const string Name_crossfade_time = "crossfade_time";
        public const string Name_reverb_right_delay_feedback = "reverb_right_delay_feedback";
        public const string Name_reverb_right_hpf_frequency = "reverb_right_hpf_frequency";
        public const string Name_reverb_model1_time = "reverb_model1_time";
        #endregion

        public WORLD_aud_world_reverb(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Single blur_scalers() {
            return GetValue<System.Single>("blur_scalers");
        }
        public System.Single crossfade_time() {
            return GetValue<System.Single>("crossfade_time");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x0A2E28C8() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x0A2E28C8");
        }
        public List<VaultLib.CodeGen.RefSpecWrapper> field_0x3CE9D9BE() {
            return GetArray<VaultLib.CodeGen.RefSpecWrapper>("0x3CE9D9BE");
        }
        public System.Single reverb_left_delay_feedback() {
            return GetValue<System.Single>("reverb_left_delay_feedback");
        }
        public System.Single reverb_left_delay_lfo_depth() {
            return GetValue<System.Single>("reverb_left_delay_lfo_depth");
        }
        public System.Single reverb_left_delay_lfo_frequency() {
            return GetValue<System.Single>("reverb_left_delay_lfo_frequency");
        }
        public System.Single reverb_left_delay_time() {
            return GetValue<System.Single>("reverb_left_delay_time");
        }
        public System.Single reverb_left_gain() {
            return GetValue<System.Single>("reverb_left_gain");
        }
        public System.Single reverb_left_hpf_frequency() {
            return GetValue<System.Single>("reverb_left_hpf_frequency");
        }
        public System.Single reverb_left_lpf_frequency() {
            return GetValue<System.Single>("reverb_left_lpf_frequency");
        }
        public System.Single reverb_model1_brightness() {
            return GetValue<System.Single>("reverb_model1_brightness");
        }
        public System.Single reverb_model1_sendleft_dry() {
            return GetValue<System.Single>("reverb_model1_sendleft_dry");
        }
        public System.Single reverb_model1_sendleft_wet() {
            return GetValue<System.Single>("reverb_model1_sendleft_wet");
        }
        public System.Single reverb_model1_sendright_dry() {
            return GetValue<System.Single>("reverb_model1_sendright_dry");
        }
        public System.Single reverb_model1_sendright_wet() {
            return GetValue<System.Single>("reverb_model1_sendright_wet");
        }
        public System.Single reverb_model1_size() {
            return GetValue<System.Single>("reverb_model1_size");
        }
        public System.Single reverb_model1_time() {
            return GetValue<System.Single>("reverb_model1_time");
        }
        public System.Single reverb_pan_lfo_depth() {
            return GetValue<System.Single>("reverb_pan_lfo_depth");
        }
        public System.Single reverb_pan_lfo_frequency() {
            return GetValue<System.Single>("reverb_pan_lfo_frequency");
        }
        public System.Single reverb_right_delay_feedback() {
            return GetValue<System.Single>("reverb_right_delay_feedback");
        }
        public System.Single reverb_right_delay_lfo_depth() {
            return GetValue<System.Single>("reverb_right_delay_lfo_depth");
        }
        public System.Single reverb_right_delay_lfo_frequency() {
            return GetValue<System.Single>("reverb_right_delay_lfo_frequency");
        }
        public System.Single reverb_right_delay_time() {
            return GetValue<System.Single>("reverb_right_delay_time");
        }
        public System.Single reverb_right_gain() {
            return GetValue<System.Single>("reverb_right_gain");
        }
        public System.Single reverb_right_hpf_frequency() {
            return GetValue<System.Single>("reverb_right_hpf_frequency");
        }
        #endregion

    }
}
