using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_dynamicsurface : CollectionWrapperBase {
        #region Field Names
        public const string Name_ColourCurve = "ColourCurve";
        public const string Name_MaxLife = "MaxLife";
        public const string Name_MinLife = "MinLife";
        public const string Name_ColourEnd = "ColourEnd";
        public const string Name_RadiusCurve = "RadiusCurve";
        public const string Name_Texture = "Texture";
        public const string Name_RadiusStart = "RadiusStart";
        public const string Name_RadiusEnd = "RadiusEnd";
        public const string Name_ColourStart = "ColourStart";
        public const string Name_simsurface = "simsurface";
        #endregion

        public WORLD_dynamicsurface(VLTCollection collection) : base(collection) {}

        #region Getters
        public VaultLib.Core.Types.Attrib.Types.Vector4 ColourCurve() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("ColourCurve");
        }
        public System.UInt32 ColourEnd() {
            return GetValue<System.UInt32>("ColourEnd");
        }
        public System.UInt32 ColourStart() {
            return GetValue<System.UInt32>("ColourStart");
        }
        public System.Single MaxLife() {
            return GetValue<System.Single>("MaxLife");
        }
        public System.Single MinLife() {
            return GetValue<System.Single>("MinLife");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 RadiusCurve() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("RadiusCurve");
        }
        public System.Single RadiusEnd() {
            return GetValue<System.Single>("RadiusEnd");
        }
        public System.Single RadiusStart() {
            return GetValue<System.Single>("RadiusStart");
        }
        public VaultLib.CodeGen.RefSpecWrapper simsurface() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("simsurface");
        }
        public VaultLib.Support.World.VLT.type_bStringHash Texture() {
            return GetValue<VaultLib.Support.World.VLT.type_bStringHash>("Texture");
        }
        #endregion

    }
}
