using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_aivehicle : CollectionWrapperBase {
        #region Field Names
        public const string Name_PlayerCollisions = "PlayerCollisions";
        public const string Name_PlayerCollisionsDefault = "PlayerCollisionsDefault";
        public const string Name_MAXIMUM_AI_SPEED = "MAXIMUM_AI_SPEED";
        public const string Name_DetachmentID = "DetachmentID";
        public const string Name_RepPointsForDestroying = "RepPointsForDestroying";
        public const string Name_AccelerationMultiplier = "AccelerationMultiplier";
        public const string Name_CostToStateForDestroying = "CostToStateForDestroying";
        public const string Name_TopSpeedMultiplier = "TopSpeedMultiplier";
        #endregion

        public WORLD_aivehicle(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Single AccelerationMultiplier() {
            return GetValue<System.Single>("AccelerationMultiplier");
        }
        public System.Int32 CostToStateForDestroying() {
            return GetValue<System.Int32>("CostToStateForDestroying");
        }
        // unknown type: Csis::Type_speaker_battalion
        public VaultLib.Core.Types.VLTUnknown DetachmentID() {
            return GetValue<VaultLib.Core.Types.VLTUnknown>("DetachmentID");
        }
        public System.Single MAXIMUM_AI_SPEED() {
            return GetValue<System.Single>("MAXIMUM_AI_SPEED");
        }
        public List<VaultLib.Support.World.VLT.AICollisionReactionRecord> PlayerCollisions() {
            return GetArray<VaultLib.Support.World.VLT.AICollisionReactionRecord>("PlayerCollisions");
        }
        public VaultLib.CodeGen.RefSpecWrapper PlayerCollisionsDefault() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("PlayerCollisionsDefault");
        }
        public List<System.Int32> RepPointsForDestroying() {
            return GetArray<System.Int32>("RepPointsForDestroying");
        }
        public System.Single TopSpeedMultiplier() {
            return GetValue<System.Single>("TopSpeedMultiplier");
        }
        #endregion

    }
}
