using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_engine_distortion : CollectionWrapperBase {
        #region Field Names
        public const string Name_0x115D233D = "0x115D233D";
        public const string Name_0x1341AEB0 = "0x1341AEB0";
        public const string Name_ThrottleMultiplier = "ThrottleMultiplier";
        public const string Name_0x57A42BBD = "0x57A42BBD";
        public const string Name_Gain = "Gain";
        public const string Name_Basis = "Basis";
        public const string Name_0xA5447FAF = "0xA5447FAF";
        public const string Name_LoadMultiplier = "LoadMultiplier";
        public const string Name_PositiveClip = "PositiveClip";
        public const string Name_NegativeClip = "NegativeClip";
        public const string Name_0xE901B220 = "0xE901B220";
        #endregion

        public WORLD_engine_distortion(VLTCollection collection) : base(collection) {}

        #region Getters
        // unknown type: DISTORTION_BASIS
        public VaultLib.Core.Types.VLTUnknown Basis() {
            return GetValue<VaultLib.Core.Types.VLTUnknown>("Basis");
        }
        public List<System.Single> field_0x115D233D() {
            return GetArray<System.Single>("0x115D233D");
        }
        public List<System.Single> field_0x1341AEB0() {
            return GetArray<System.Single>("0x1341AEB0");
        }
        public System.Single field_0x57A42BBD() {
            return GetValue<System.Single>("0x57A42BBD");
        }
        public System.Single field_0xA5447FAF() {
            return GetValue<System.Single>("0xA5447FAF");
        }
        public List<System.Single> field_0xE901B220() {
            return GetArray<System.Single>("0xE901B220");
        }
        public List<System.Single> Gain() {
            return GetArray<System.Single>("Gain");
        }
        public System.Single LoadMultiplier() {
            return GetValue<System.Single>("LoadMultiplier");
        }
        public List<System.Single> NegativeClip() {
            return GetArray<System.Single>("NegativeClip");
        }
        public List<System.Single> PositiveClip() {
            return GetArray<System.Single>("PositiveClip");
        }
        public System.Single ThrottleMultiplier() {
            return GetValue<System.Single>("ThrottleMultiplier");
        }
        #endregion

    }
}
