using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_smackable : CollectionWrapperBase {
        #region Field Names
        public const string Name_RiskCar_Tier = "RiskCar_Tier";
        public const string Name_0x1E9B673E = "0x1E9B673E";
        public const string Name_NO_CAR_EFFECT = "NO_CAR_EFFECT";
        public const string Name_ExplosionEffect = "ExplosionEffect";
        public const string Name_DROPOUT = "DROPOUT";
        public const string Name_MASS = "MASS";
        public const string Name_SFX = "SFX";
        public const string Name_start_sequencer = "start_sequencer";
        public const string Name_EventSequencer = "EventSequencer";
        public const string Name_0x5C4C7585 = "0x5C4C7585";
        public const string Name_RESPAWN_TIME = "RESPAWN_TIME";
        public const string Name_COST_TO_STATE = "COST_TO_STATE";
        public const string Name_AI_AVOIDABLE = "AI_AVOIDABLE";
        public const string Name_IsWooshable = "IsWooshable";
        public const string Name_OnScrapeWorld = "OnScrapeWorld";
        public const string Name_no_trigger = "no_trigger";
        public const string Name_rigidbodyspecs = "rigidbodyspecs";
        public const string Name_WooshType = "WooshType";
        public const string Name_Persists = "Persists";
        public const string Name_CollectionName = "CollectionName";
        public const string Name_AUTO_SIMPLIFY = "AUTO_SIMPLIFY";
        public const string Name_DETACH_FORCE = "DETACH_FORCE";
        public const string Name_ALLOW_OFF_WORLD = "ALLOW_OFF_WORLD";
        public const string Name_KILL_OFF_SCREEN = "KILL_OFF_SCREEN";
        public const string Name_IsCanyonRail = "IsCanyonRail";
        public const string Name_OnDetached = "OnDetached";
        public const string Name_CAN_SIMPLIFY = "CAN_SIMPLIFY";
        public const string Name_OnHitGround = "OnHitGround";
        public const string Name_BEHAVIORS = "BEHAVIORS";
        public const string Name_HitchHeat = "HitchHeat";
        public const string Name_OnScrapeGround = "OnScrapeGround";
        public const string Name_OnHitWorld = "OnHitWorld";
        public const string Name_CAMERA_AVOIDABLE = "CAMERA_AVOIDABLE";
        public const string Name_SimplePhysics = "SimplePhysics";
        public const string Name_MOMENT = "MOMENT";
        #endregion

        public WORLD_smackable(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Boolean AI_AVOIDABLE() {
            return GetValue<System.Boolean>("AI_AVOIDABLE");
        }
        public System.Boolean ALLOW_OFF_WORLD() {
            return GetValue<System.Boolean>("ALLOW_OFF_WORLD");
        }
        public System.Single AUTO_SIMPLIFY() {
            return GetValue<System.Single>("AUTO_SIMPLIFY");
        }
        public List<VaultLib.ModernBase.StringKey> BEHAVIORS() {
            return GetArray<VaultLib.ModernBase.StringKey>("BEHAVIORS");
        }
        public System.Boolean CAMERA_AVOIDABLE() {
            return GetValue<System.Boolean>("CAMERA_AVOIDABLE");
        }
        public System.Int32 CAN_SIMPLIFY() {
            return GetValue<System.Int32>("CAN_SIMPLIFY");
        }
        public System.String CollectionName() {
            return GetValue<System.String>("CollectionName");
        }
        public System.UInt32 COST_TO_STATE() {
            return GetValue<System.UInt32>("COST_TO_STATE");
        }
        public System.Single DETACH_FORCE() {
            return GetValue<System.Single>("DETACH_FORCE");
        }
        public List<System.Single> DROPOUT() {
            return GetArray<System.Single>("DROPOUT");
        }
        public VaultLib.ModernBase.StringKey EventSequencer() {
            return GetValue<VaultLib.ModernBase.StringKey>("EventSequencer");
        }
        public System.Single ExplosionEffect() {
            return GetValue<System.Single>("ExplosionEffect");
        }
        public System.Single field_0x1E9B673E() {
            return GetValue<System.Single>("0x1E9B673E");
        }
        public System.Boolean field_0x5C4C7585() {
            return GetValue<System.Boolean>("0x5C4C7585");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> HitchHeat() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("HitchHeat");
        }
        public System.Boolean IsCanyonRail() {
            return GetValue<System.Boolean>("IsCanyonRail");
        }
        public System.Boolean IsWooshable() {
            return GetValue<System.Boolean>("IsWooshable");
        }
        public System.Single KILL_OFF_SCREEN() {
            return GetValue<System.Single>("KILL_OFF_SCREEN");
        }
        public System.Single MASS() {
            return GetValue<System.Single>("MASS");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector3 MOMENT() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector3>("MOMENT");
        }
        public System.Boolean NO_CAR_EFFECT() {
            return GetValue<System.Boolean>("NO_CAR_EFFECT");
        }
        public System.Boolean no_trigger() {
            return GetValue<System.Boolean>("no_trigger");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> OnDetached() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("OnDetached");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> OnHitGround() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("OnHitGround");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> OnHitWorld() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("OnHitWorld");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> OnScrapeGround() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("OnScrapeGround");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> OnScrapeWorld() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("OnScrapeWorld");
        }
        public System.Boolean Persists() {
            return GetValue<System.Boolean>("Persists");
        }
        public System.Single RESPAWN_TIME() {
            return GetValue<System.Single>("RESPAWN_TIME");
        }
        public VaultLib.CodeGen.RefSpecWrapper rigidbodyspecs() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("rigidbodyspecs");
        }
        public List<VaultLib.Support.World.VLT.EffectLinkageRecord> RiskCar_Tier() {
            return GetArray<VaultLib.Support.World.VLT.EffectLinkageRecord>("RiskCar_Tier");
        }
        public VaultLib.CodeGen.RefSpecWrapper SFX() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("SFX");
        }
        public System.Boolean SimplePhysics() {
            return GetValue<System.Boolean>("SimplePhysics");
        }
        public System.Boolean start_sequencer() {
            return GetValue<System.Boolean>("start_sequencer");
        }
        public VaultLib.Support.World.VLT.eDRIVE_BY_TYPE WooshType() {
            return GetValue<VaultLib.Support.World.VLT.eDRIVE_BY_TYPE>("WooshType");
        }
        #endregion

    }
}
