using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_fuelcell_emitter : CollectionWrapperBase {
        #region Field Names
        public const string Name_VelocityInherit = "VelocityInherit";
        public const string Name_GravityDelta = "GravityDelta";
        public const string Name_VolumeExtent = "VolumeExtent";
        public const string Name_VelocityStart = "VelocityStart";
        public const string Name_VolumeCenter = "VolumeCenter";
        public const string Name_0x24CA9352 = "0x24CA9352";
        public const string Name_zSpinX = "zSpinX";
        public const string Name_VelocityDelta = "VelocityDelta";
        public const string Name_HeightStart = "HeightStart";
        public const string Name_Colour1 = "Colour1";
        public const string Name_Elasticity = "Elasticity";
        public const string Name_LengthStart = "LengthStart";
        public const string Name_zContrail = "zContrail";
        public const string Name_Life = "Life";
        public const string Name_LengthDelta = "LengthDelta";
        public const string Name_zSpinY = "zSpinY";
        public const string Name_NumParticlesVariance = "NumParticlesVariance";
        public const string Name_NumParticles = "NumParticles";
        public const string Name_zSpinZ = "zSpinZ";
        public const string Name_emitteruv = "emitteruv";
        public const string Name_GravityStart = "GravityStart";
        public const string Name_LifeVariance = "LifeVariance";
        #endregion

        public WORLD_fuelcell_emitter(VLTCollection collection) : base(collection) {}

        #region Getters
        public VaultLib.Core.Types.Attrib.Types.Vector4 Colour1() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("Colour1");
        }
        public System.Single Elasticity() {
            return GetValue<System.Single>("Elasticity");
        }
        public VaultLib.CodeGen.RefSpecWrapper emitteruv() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("emitteruv");
        }
        public System.Byte field_0x24CA9352() {
            return GetValue<System.Byte>("0x24CA9352");
        }
        public System.Single GravityDelta() {
            return GetValue<System.Single>("GravityDelta");
        }
        public System.Single GravityStart() {
            return GetValue<System.Single>("GravityStart");
        }
        public System.Single HeightStart() {
            return GetValue<System.Single>("HeightStart");
        }
        public System.Single LengthDelta() {
            return GetValue<System.Single>("LengthDelta");
        }
        public System.Single LengthStart() {
            return GetValue<System.Single>("LengthStart");
        }
        public System.Single Life() {
            return GetValue<System.Single>("Life");
        }
        public System.Single LifeVariance() {
            return GetValue<System.Single>("LifeVariance");
        }
        public System.Single NumParticles() {
            return GetValue<System.Single>("NumParticles");
        }
        public System.Single NumParticlesVariance() {
            return GetValue<System.Single>("NumParticlesVariance");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 VelocityDelta() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("VelocityDelta");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 VelocityInherit() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("VelocityInherit");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 VelocityStart() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("VelocityStart");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 VolumeCenter() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("VolumeCenter");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 VolumeExtent() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("VolumeExtent");
        }
        public System.SByte zContrail() {
            return GetValue<System.SByte>("zContrail");
        }
        public System.SByte zSpinX() {
            return GetValue<System.SByte>("zSpinX");
        }
        public System.SByte zSpinY() {
            return GetValue<System.SByte>("zSpinY");
        }
        public System.SByte zSpinZ() {
            return GetValue<System.SByte>("zSpinZ");
        }
        #endregion

    }
}
