using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_ecar : CollectionWrapperBase {
        #region Field Names
        public const string Name_SlipFX = "SlipFX";
        public const string Name_BodyDive = "BodyDive";
        public const string Name_0x0C2DA793 = "0x0C2DA793";
        public const string Name_0x10204A90 = "0x10204A90";
        public const string Name_RoadNoise = "RoadNoise";
        public const string Name_LIGHT_COPRED = "LIGHT_COPRED";
        public const string Name_LIGHT_COPWHITE = "LIGHT_COPWHITE";
        public const string Name_WheelWell = "WheelWell";
        public const string Name_ShiftAngle = "ShiftAngle";
        public const string Name_DamageEffect = "DamageEffect";
        public const string Name_RideHeight = "RideHeight";
        public const string Name_WheelHopScale = "WheelHopScale";
        public const string Name_EngineRev = "EngineRev";
        public const string Name_0x585517F3 = "0x585517F3";
        public const string Name_TireOffsets = "TireOffsets";
        public const string Name_NOSEffect = "NOSEffect";
        public const string Name_BodySquat = "BodySquat";
        public const string Name_SteerSpeed = "SteerSpeed";
        public const string Name_TireSkidWidthKitScale = "TireSkidWidthKitScale";
        public const string Name_EngineVibrationFreq = "EngineVibrationFreq";
        public const string Name_LIGHT_COPBLUE = "LIGHT_COPBLUE";
        public const string Name_CamberRear = "CamberRear";
        public const string Name_CamberFront = "CamberFront";
        public const string Name_FECompressions = "FECompressions";
        public const string Name_TireSkidWidth = "TireSkidWidth";
        public const string Name_0x96582821 = "0x96582821";
        public const string Name_WheelSpokeCount = "WheelSpokeCount";
        public const string Name_CollectionName = "CollectionName";
        public const string Name_0xA4A147E3 = "0xA4A147E3";
        public const string Name_MaxTireSteer = "MaxTireSteer";
        public const string Name_StockPresetSkin = "StockPresetSkin";
        public const string Name_SkidFX = "SkidFX";
        public const string Name_ReflectionOffset = "ReflectionOffset";
        public const string Name_ExtraRearTireOffset = "ExtraRearTireOffset";
        public const string Name_MissShiftEffect = "MissShiftEffect";
        public const string Name_KitWheelOffsetRear = "KitWheelOffsetRear";
        public const string Name_0xCCF03CB3 = "0xCCF03CB3";
        public const string Name_0xD74C1435 = "0xD74C1435";
        public const string Name_0xD76A6FAD = "0xD76A6FAD";
        public const string Name_IsSkinned = "IsSkinned";
        public const string Name_EngineBlownEffect = "EngineBlownEffect";
        public const string Name_ShiftSpeed = "ShiftSpeed";
        public const string Name_FXAngularDeviation = "FXAngularDeviation";
        public const string Name_EngineRevAngle = "EngineRevAngle";
        public const string Name_BlowOffTimer = "BlowOffTimer";
        public const string Name_0xE49A2767 = "0xE49A2767";
        public const string Name_0xE4B7F07C = "0xE4B7F07C";
        public const string Name_0xE8E02C9A = "0xE8E02C9A";
        public const string Name_EngineVibrationMin = "EngineVibrationMin";
        public const string Name_ExtraPitch = "ExtraPitch";
        public const string Name_FrontCamber = "FrontCamber";
        public const string Name_DeathEffect = "DeathEffect";
        public const string Name_EngineVibrationMax = "EngineVibrationMax";
        public const string Name_BodyRoll = "BodyRoll";
        public const string Name_EngineRevSpeed = "EngineRevSpeed";
        public const string Name_KitWheelOffsetFront = "KitWheelOffsetFront";
        #endregion

        public WORLD_ecar(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Single BlowOffTimer() {
            return GetValue<System.Single>("BlowOffTimer");
        }
        public VaultLib.Support.World.VLT.CarBodyMotion BodyDive() {
            return GetValue<VaultLib.Support.World.VLT.CarBodyMotion>("BodyDive");
        }
        public VaultLib.Support.World.VLT.CarBodyMotion BodyRoll() {
            return GetValue<VaultLib.Support.World.VLT.CarBodyMotion>("BodyRoll");
        }
        public VaultLib.Support.World.VLT.CarBodyMotion BodySquat() {
            return GetValue<VaultLib.Support.World.VLT.CarBodyMotion>("BodySquat");
        }
        public System.Single CamberFront() {
            return GetValue<System.Single>("CamberFront");
        }
        public System.Single CamberRear() {
            return GetValue<System.Single>("CamberRear");
        }
        public System.String CollectionName() {
            return GetValue<System.String>("CollectionName");
        }
        public VaultLib.CodeGen.RefSpecWrapper DamageEffect() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("DamageEffect");
        }
        public VaultLib.CodeGen.RefSpecWrapper DeathEffect() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("DeathEffect");
        }
        public VaultLib.CodeGen.RefSpecWrapper EngineBlownEffect() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("EngineBlownEffect");
        }
        public System.Single EngineRev() {
            return GetValue<System.Single>("EngineRev");
        }
        public System.Single EngineRevAngle() {
            return GetValue<System.Single>("EngineRevAngle");
        }
        public System.Single EngineRevSpeed() {
            return GetValue<System.Single>("EngineRevSpeed");
        }
        public System.Single EngineVibrationFreq() {
            return GetValue<System.Single>("EngineVibrationFreq");
        }
        public System.Single EngineVibrationMax() {
            return GetValue<System.Single>("EngineVibrationMax");
        }
        public System.Single EngineVibrationMin() {
            return GetValue<System.Single>("EngineVibrationMin");
        }
        public System.Single ExtraPitch() {
            return GetValue<System.Single>("ExtraPitch");
        }
        public System.Single ExtraRearTireOffset() {
            return GetValue<System.Single>("ExtraRearTireOffset");
        }
        public List<System.Single> FECompressions() {
            return GetArray<System.Single>("FECompressions");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x0C2DA793() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x0C2DA793");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x10204A90() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x10204A90");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0x585517F3() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0x585517F3");
        }
        public List<VaultLib.Support.World.VLT.IntegratedKitWheelOffset> field_0x96582821() {
            return GetArray<VaultLib.Support.World.VLT.IntegratedKitWheelOffset>("0x96582821");
        }
        public System.Single field_0xA4A147E3() {
            return GetValue<System.Single>("0xA4A147E3");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0xCCF03CB3() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0xCCF03CB3");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0xD74C1435() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0xD74C1435");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0xD76A6FAD() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0xD76A6FAD");
        }
        public VaultLib.CodeGen.RefSpecWrapper field_0xE49A2767() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("0xE49A2767");
        }
        public List<VaultLib.Support.World.VLT.IntegratedKitWheelOffset> field_0xE4B7F07C() {
            return GetArray<VaultLib.Support.World.VLT.IntegratedKitWheelOffset>("0xE4B7F07C");
        }
        public System.Single field_0xE8E02C9A() {
            return GetValue<System.Single>("0xE8E02C9A");
        }
        public System.Single FrontCamber() {
            return GetValue<System.Single>("FrontCamber");
        }
        public List<System.Single> FXAngularDeviation() {
            return GetArray<System.Single>("FXAngularDeviation");
        }
        public System.Boolean IsSkinned() {
            return GetValue<System.Boolean>("IsSkinned");
        }
        public List<System.Byte> KitWheelOffsetFront() {
            return GetArray<System.Byte>("KitWheelOffsetFront");
        }
        public List<System.Byte> KitWheelOffsetRear() {
            return GetArray<System.Byte>("KitWheelOffsetRear");
        }
        public VaultLib.CodeGen.RefSpecWrapper LIGHT_COPBLUE() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("LIGHT_COPBLUE");
        }
        public VaultLib.CodeGen.RefSpecWrapper LIGHT_COPRED() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("LIGHT_COPRED");
        }
        public VaultLib.CodeGen.RefSpecWrapper LIGHT_COPWHITE() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("LIGHT_COPWHITE");
        }
        public System.Single MaxTireSteer() {
            return GetValue<System.Single>("MaxTireSteer");
        }
        public VaultLib.CodeGen.RefSpecWrapper MissShiftEffect() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("MissShiftEffect");
        }
        public VaultLib.CodeGen.RefSpecWrapper NOSEffect() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("NOSEffect");
        }
        public System.Single ReflectionOffset() {
            return GetValue<System.Single>("ReflectionOffset");
        }
        public System.Single RideHeight() {
            return GetValue<System.Single>("RideHeight");
        }
        public System.Single RoadNoise() {
            return GetValue<System.Single>("RoadNoise");
        }
        public System.Single ShiftAngle() {
            return GetValue<System.Single>("ShiftAngle");
        }
        public System.Single ShiftSpeed() {
            return GetValue<System.Single>("ShiftSpeed");
        }
        public List<System.Single> SkidFX() {
            return GetArray<System.Single>("SkidFX");
        }
        public List<System.Single> SlipFX() {
            return GetArray<System.Single>("SlipFX");
        }
        public System.Single SteerSpeed() {
            return GetValue<System.Single>("SteerSpeed");
        }
        public VaultLib.Support.World.VLT.type_bStringHash StockPresetSkin() {
            return GetValue<VaultLib.Support.World.VLT.type_bStringHash>("StockPresetSkin");
        }
        public List<VaultLib.Core.Types.Attrib.Types.Vector4> TireOffsets() {
            return GetArray<VaultLib.Core.Types.Attrib.Types.Vector4>("TireOffsets");
        }
        public List<System.Single> TireSkidWidth() {
            return GetArray<System.Single>("TireSkidWidth");
        }
        public List<VaultLib.Core.Types.Attrib.Types.Vector2> TireSkidWidthKitScale() {
            return GetArray<VaultLib.Core.Types.Attrib.Types.Vector2>("TireSkidWidthKitScale");
        }
        public System.Single WheelHopScale() {
            return GetValue<System.Single>("WheelHopScale");
        }
        public System.SByte WheelSpokeCount() {
            return GetValue<System.SByte>("WheelSpokeCount");
        }
        public System.Single WheelWell() {
            return GetValue<System.Single>("WheelWell");
        }
        #endregion

    }
}
