using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_light_flares_cg : CollectionWrapperBase {
        #region Field Names
        public const string Name_colour = "colour";
        public const string Name_Maxscale = "Maxscale";
        public const string Name_MinScale = "MinScale";
        public const string Name_MinSize = "MinSize";
        public const string Name_Power = "Power";
        public const string Name_ZBias = "ZBias";
        public const string Name_AspectRatio = "AspectRatio";
        public const string Name_flare_texture = "flare_texture";
        public const string Name_Sweep = "Sweep";
        public const string Name_MaxSize = "MaxSize";
        #endregion

        public WORLD_light_flares_cg(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Single AspectRatio() {
            return GetValue<System.Single>("AspectRatio");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 colour() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("colour");
        }
        public System.UInt32 flare_texture() {
            return GetValue<System.UInt32>("flare_texture");
        }
        public System.Single Maxscale() {
            return GetValue<System.Single>("Maxscale");
        }
        public System.Single MaxSize() {
            return GetValue<System.Single>("MaxSize");
        }
        public System.Single MinScale() {
            return GetValue<System.Single>("MinScale");
        }
        public System.Single MinSize() {
            return GetValue<System.Single>("MinSize");
        }
        public System.Single Power() {
            return GetValue<System.Single>("Power");
        }
        public System.Single Sweep() {
            return GetValue<System.Single>("Sweep");
        }
        public System.Single ZBias() {
            return GetValue<System.Single>("ZBias");
        }
        #endregion

    }
}
