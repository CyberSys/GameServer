using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_pursuitlevels : CollectionWrapperBase {
        #region Field Names
        public const string Name_FullEngagementRadius = "FullEngagementRadius";
        public const string Name_TimeInactiveFor911 = "TimeInactiveFor911";
        public const string Name_BustedCopDistance = "BustedCopDistance";
        public const string Name_MaxCopsCollapsing = "MaxCopsCollapsing";
        public const string Name_Lifetime911 = "Lifetime911";
        public const string Name_SpeedReactionTime = "SpeedReactionTime";
        public const string Name_MeterBustIncrement = "MeterBustIncrement";
        public const string Name_PursuitWave_Time = "PursuitWave_Time";
        public const string Name_PursuitWave_CopTypes = "PursuitWave_CopTypes";
        public const string Name_Roadblock_CopTypes = "Roadblock_CopTypes";
        public const string Name_CollapseInnerRadius = "CollapseInnerRadius";
        public const string Name_NumPatrolCars = "NumPatrolCars";
        public const string Name_RhinoWave_Time = "RhinoWave_Time";
        public const string Name_TimeBetweenHeliActive = "TimeBetweenHeliActive";
        public const string Name_Roadblock_SpikeChance = "Roadblock_SpikeChance";
        public const string Name_MeterMaxNumCopsBustMultiplier = "MeterMaxNumCopsBustMultiplier";
        public const string Name_IgnorePerpInSightForHeavySupportRequest = "IgnorePerpInSightForHeavySupportRequest";
        public const string Name_roadblockheavyintervaltimer = "roadblockheavyintervaltimer";
        public const string Name_TimePerHeatLevel = "TimePerHeatLevel";
        public const string Name_SirenWailPeriod = "SirenWailPeriod";
        public const string Name_SearchModeHeliSpawnChance = "SearchModeHeliSpawnChance";
        public const string Name_SirenInitMinPeriod = "SirenInitMinPeriod";
        public const string Name_Roadblock_MaxBlocks = "Roadblock_MaxBlocks";
        public const string Name_MeterBustDecrement = "MeterBustDecrement";
        public const string Name_roadblockhelichance = "roadblockhelichance";
        public const string Name_SirenScreamPeriod = "SirenScreamPeriod";
        public const string Name_CollapseAggression = "CollapseAggression";
        public const string Name_roadblockspikechance = "roadblockspikechance";
        public const string Name_CopFormations = "CopFormations";
        public const string Name_RhinoWave_NumLocalCops = "RhinoWave_NumLocalCops";
        public const string Name_RollingBlockDuration = "RollingBlockDuration";
        public const string Name_MeterMaxBustRadius = "MeterMaxBustRadius";
        public const string Name_MeterMinEvadeRadius = "MeterMinEvadeRadius";
        public const string Name_roadblockintervaltimer = "roadblockintervaltimer";
        public const string Name_BoxinTightness = "BoxinTightness";
        public const string Name_NumCiviHitsFor911 = "NumCiviHitsFor911";
        public const string Name_FullEngagementCopCount = "FullEngagementCopCount";
        public const string Name_StaggerFormationTime = "StaggerFormationTime";
        public const string Name_BustSpeed = "BustSpeed";
        public const string Name_SirenMaxYelpTime = "SirenMaxYelpTime";
        public const string Name_HeavySupportCheckTime = "HeavySupportCheckTime";
        public const string Name_HiddenZoneTimeMultiplier = "HiddenZoneTimeMultiplier";
        public const string Name_BoxinDuration = "BoxinDuration";
        public const string Name_BustedTimeout = "BustedTimeout";
        public const string Name_SearchModeRoadblockRadius = "SearchModeRoadblockRadius";
        public const string Name_MeterDeadZoneBustedDistance = "MeterDeadZoneBustedDistance";
        public const string Name_frontLOSdistance = "frontLOSdistance";
        public const string Name_CollapseOuterRadius = "CollapseOuterRadius";
        public const string Name_TimeBetweenFirstFourSpawn = "TimeBetweenFirstFourSpawn";
        public const string Name_CollectionName = "CollectionName";
        public const string Name_TimeBetweenCopSpawn = "TimeBetweenCopSpawn";
        public const string Name_CTSFor911 = "CTSFor911";
        public const string Name_heliLOSdistance = "heliLOSdistance";
        public const string Name_MeterMinBustRadius = "MeterMinBustRadius";
        public const string Name_evadetimeout = "evadetimeout";
        public const string Name_cops = "cops";
        public const string Name_BackupCallTimer = "BackupCallTimer";
        public const string Name_roadblockprobability = "roadblockprobability";
        public const string Name_SirenInitVariation = "SirenInitVariation";
        public const string Name_SirenMaxScreamTime = "SirenMaxScreamTime";
        public const string Name_DestroyCopBonusTime = "DestroyCopBonusTime";
        public const string Name_RollingBlockTightness = "RollingBlockTightness";
        public const string Name_NumCopsToTriggerBackup = "NumCopsToTriggerBackup";
        public const string Name_MeterBustRadiusSpeedThreshold = "MeterBustRadiusSpeedThreshold";
        public const string Name_CollapseSpeed = "CollapseSpeed";
        public const string Name_rearLOSdistance = "rearLOSdistance";
        public const string Name_HeliFuelTime = "HeliFuelTime";
        public const string Name_PursuitWave_NumLocalCops = "PursuitWave_NumLocalCops";
        public const string Name_RhinoWave_CopTypes = "RhinoWave_CopTypes";
        public const string Name_roadblockbreakofftimer = "roadblockbreakofftimer";
        public const string Name_MeterDeadZoneEvadeDist = "MeterDeadZoneEvadeDist";
        public const string Name_Roadblock_Time = "Roadblock_Time";
        public const string Name_SearchModeRoadblockChance = "SearchModeRoadblockChance";
        public const string Name_MaxActiveCopCars = "MaxActiveCopCars";
        public const string Name_TimeToHideInZone = "TimeToHideInZone";
        #endregion

        public WORLD_pursuitlevels(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Single BackupCallTimer() {
            return GetValue<System.Single>("BackupCallTimer");
        }
        public System.Single BoxinDuration() {
            return GetValue<System.Single>("BoxinDuration");
        }
        public System.Single BoxinTightness() {
            return GetValue<System.Single>("BoxinTightness");
        }
        public System.Single BustedCopDistance() {
            return GetValue<System.Single>("BustedCopDistance");
        }
        public System.Single BustedTimeout() {
            return GetValue<System.Single>("BustedTimeout");
        }
        public System.Single BustSpeed() {
            return GetValue<System.Single>("BustSpeed");
        }
        public System.Single CollapseAggression() {
            return GetValue<System.Single>("CollapseAggression");
        }
        public System.Int32 CollapseInnerRadius() {
            return GetValue<System.Int32>("CollapseInnerRadius");
        }
        public System.Single CollapseOuterRadius() {
            return GetValue<System.Single>("CollapseOuterRadius");
        }
        public System.Single CollapseSpeed() {
            return GetValue<System.Single>("CollapseSpeed");
        }
        public System.String CollectionName() {
            return GetValue<System.String>("CollectionName");
        }
        public List<VaultLib.Support.World.VLT.GameCore.Pursuit.CopFormationRecord> CopFormations() {
            return GetArray<VaultLib.Support.World.VLT.GameCore.Pursuit.CopFormationRecord>("CopFormations");
        }
        public List<VaultLib.Support.World.VLT.GameCore.Pursuit.CopCountRecord> cops() {
            return GetArray<VaultLib.Support.World.VLT.GameCore.Pursuit.CopCountRecord>("cops");
        }
        public System.Int32 CTSFor911() {
            return GetValue<System.Int32>("CTSFor911");
        }
        public System.Single DestroyCopBonusTime() {
            return GetValue<System.Single>("DestroyCopBonusTime");
        }
        public System.Single evadetimeout() {
            return GetValue<System.Single>("evadetimeout");
        }
        public System.Single frontLOSdistance() {
            return GetValue<System.Single>("frontLOSdistance");
        }
        public System.Int32 FullEngagementCopCount() {
            return GetValue<System.Int32>("FullEngagementCopCount");
        }
        public System.Single FullEngagementRadius() {
            return GetValue<System.Single>("FullEngagementRadius");
        }
        public System.Single HeavySupportCheckTime() {
            return GetValue<System.Single>("HeavySupportCheckTime");
        }
        public System.Single HeliFuelTime() {
            return GetValue<System.Single>("HeliFuelTime");
        }
        public System.Single heliLOSdistance() {
            return GetValue<System.Single>("heliLOSdistance");
        }
        public System.Single HiddenZoneTimeMultiplier() {
            return GetValue<System.Single>("HiddenZoneTimeMultiplier");
        }
        public System.Boolean IgnorePerpInSightForHeavySupportRequest() {
            return GetValue<System.Boolean>("IgnorePerpInSightForHeavySupportRequest");
        }
        public System.Single Lifetime911() {
            return GetValue<System.Single>("Lifetime911");
        }
        public System.Single MaxActiveCopCars() {
            return GetValue<System.Single>("MaxActiveCopCars");
        }
        public System.Int32 MaxCopsCollapsing() {
            return GetValue<System.Int32>("MaxCopsCollapsing");
        }
        public System.Single MeterBustDecrement() {
            return GetValue<System.Single>("MeterBustDecrement");
        }
        public System.Single MeterBustIncrement() {
            return GetValue<System.Single>("MeterBustIncrement");
        }
        public System.Single MeterBustRadiusSpeedThreshold() {
            return GetValue<System.Single>("MeterBustRadiusSpeedThreshold");
        }
        public System.Single MeterDeadZoneBustedDistance() {
            return GetValue<System.Single>("MeterDeadZoneBustedDistance");
        }
        public System.Single MeterDeadZoneEvadeDist() {
            return GetValue<System.Single>("MeterDeadZoneEvadeDist");
        }
        public System.Single MeterMaxBustRadius() {
            return GetValue<System.Single>("MeterMaxBustRadius");
        }
        public System.Byte MeterMaxNumCopsBustMultiplier() {
            return GetValue<System.Byte>("MeterMaxNumCopsBustMultiplier");
        }
        public System.Single MeterMinBustRadius() {
            return GetValue<System.Single>("MeterMinBustRadius");
        }
        public System.Single MeterMinEvadeRadius() {
            return GetValue<System.Single>("MeterMinEvadeRadius");
        }
        public System.SByte NumCiviHitsFor911() {
            return GetValue<System.SByte>("NumCiviHitsFor911");
        }
        public System.Int32 NumCopsToTriggerBackup() {
            return GetValue<System.Int32>("NumCopsToTriggerBackup");
        }
        public System.Int32 NumPatrolCars() {
            return GetValue<System.Int32>("NumPatrolCars");
        }
        public List<VaultLib.Support.World.VLT.GameCore.KeyValuePair> PursuitWave_CopTypes() {
            return GetArray<VaultLib.Support.World.VLT.GameCore.KeyValuePair>("PursuitWave_CopTypes");
        }
        public System.Int32 PursuitWave_NumLocalCops() {
            return GetValue<System.Int32>("PursuitWave_NumLocalCops");
        }
        public System.Single PursuitWave_Time() {
            return GetValue<System.Single>("PursuitWave_Time");
        }
        public System.Single rearLOSdistance() {
            return GetValue<System.Single>("rearLOSdistance");
        }
        public List<VaultLib.Support.World.VLT.GameCore.KeyValuePair> RhinoWave_CopTypes() {
            return GetArray<VaultLib.Support.World.VLT.GameCore.KeyValuePair>("RhinoWave_CopTypes");
        }
        public System.Int32 RhinoWave_NumLocalCops() {
            return GetValue<System.Int32>("RhinoWave_NumLocalCops");
        }
        public System.Single RhinoWave_Time() {
            return GetValue<System.Single>("RhinoWave_Time");
        }
        public List<VaultLib.Support.World.VLT.GameCore.KeyValuePair> Roadblock_CopTypes() {
            return GetArray<VaultLib.Support.World.VLT.GameCore.KeyValuePair>("Roadblock_CopTypes");
        }
        public System.UInt32 Roadblock_MaxBlocks() {
            return GetValue<System.UInt32>("Roadblock_MaxBlocks");
        }
        public System.Single Roadblock_SpikeChance() {
            return GetValue<System.Single>("Roadblock_SpikeChance");
        }
        public System.Single Roadblock_Time() {
            return GetValue<System.Single>("Roadblock_Time");
        }
        public System.Single roadblockbreakofftimer() {
            return GetValue<System.Single>("roadblockbreakofftimer");
        }
        public System.Single roadblockheavyintervaltimer() {
            return GetValue<System.Single>("roadblockheavyintervaltimer");
        }
        public System.Single roadblockhelichance() {
            return GetValue<System.Single>("roadblockhelichance");
        }
        public System.Single roadblockintervaltimer() {
            return GetValue<System.Single>("roadblockintervaltimer");
        }
        public System.Single roadblockprobability() {
            return GetValue<System.Single>("roadblockprobability");
        }
        public System.Single roadblockspikechance() {
            return GetValue<System.Single>("roadblockspikechance");
        }
        public System.Single RollingBlockDuration() {
            return GetValue<System.Single>("RollingBlockDuration");
        }
        public System.Single RollingBlockTightness() {
            return GetValue<System.Single>("RollingBlockTightness");
        }
        public System.Single SearchModeHeliSpawnChance() {
            return GetValue<System.Single>("SearchModeHeliSpawnChance");
        }
        public System.Single SearchModeRoadblockChance() {
            return GetValue<System.Single>("SearchModeRoadblockChance");
        }
        public System.Single SearchModeRoadblockRadius() {
            return GetValue<System.Single>("SearchModeRoadblockRadius");
        }
        public System.Single SirenInitMinPeriod() {
            return GetValue<System.Single>("SirenInitMinPeriod");
        }
        public System.Single SirenInitVariation() {
            return GetValue<System.Single>("SirenInitVariation");
        }
        public System.Single SirenMaxScreamTime() {
            return GetValue<System.Single>("SirenMaxScreamTime");
        }
        public System.Single SirenMaxYelpTime() {
            return GetValue<System.Single>("SirenMaxYelpTime");
        }
        public System.Single SirenScreamPeriod() {
            return GetValue<System.Single>("SirenScreamPeriod");
        }
        public System.Single SirenWailPeriod() {
            return GetValue<System.Single>("SirenWailPeriod");
        }
        public System.Single SpeedReactionTime() {
            return GetValue<System.Single>("SpeedReactionTime");
        }
        public System.Single StaggerFormationTime() {
            return GetValue<System.Single>("StaggerFormationTime");
        }
        public System.Single TimeBetweenCopSpawn() {
            return GetValue<System.Single>("TimeBetweenCopSpawn");
        }
        public System.Single TimeBetweenFirstFourSpawn() {
            return GetValue<System.Single>("TimeBetweenFirstFourSpawn");
        }
        public System.Single TimeBetweenHeliActive() {
            return GetValue<System.Single>("TimeBetweenHeliActive");
        }
        public System.Single TimeInactiveFor911() {
            return GetValue<System.Single>("TimeInactiveFor911");
        }
        public System.Single TimePerHeatLevel() {
            return GetValue<System.Single>("TimePerHeatLevel");
        }
        public System.Single TimeToHideInZone() {
            return GetValue<System.Single>("TimeToHideInZone");
        }
        #endregion

    }
}
