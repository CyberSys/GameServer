using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_transmission : CollectionWrapperBase {
        #region Field Names
        public const string Name_GEAR_RATIO = "GEAR_RATIO";
        public const string Name_DIFFERENTIAL = "DIFFERENTIAL";
        public const string Name_GEAR_EFFICIENCY = "GEAR_EFFICIENCY";
        public const string Name_TORQUE_CONVERTER = "TORQUE_CONVERTER";
        public const string Name_TORQUE_SPLIT = "TORQUE_SPLIT";
        public const string Name_OPTIMAL_SHIFT = "OPTIMAL_SHIFT";
        public const string Name_GOOD_SHIFT_SCALE = "GOOD_SHIFT_SCALE";
        public const string Name_CLUTCH_SLIP = "CLUTCH_SLIP";
        public const string Name_SHIFT_SPEED = "SHIFT_SPEED";
        public const string Name_FINAL_GEAR = "FINAL_GEAR";
        public const string Name_0xDEB774C6 = "0xDEB774C6";
        #endregion

        public WORLD_transmission(VLTCollection collection) : base(collection) {}

        #region Getters
        public System.Single CLUTCH_SLIP() {
            return GetValue<System.Single>("CLUTCH_SLIP");
        }
        public List<System.Single> DIFFERENTIAL() {
            return GetArray<System.Single>("DIFFERENTIAL");
        }
        public List<System.Single> field_0xDEB774C6() {
            return GetArray<System.Single>("0xDEB774C6");
        }
        public System.Single FINAL_GEAR() {
            return GetValue<System.Single>("FINAL_GEAR");
        }
        public List<System.Single> GEAR_EFFICIENCY() {
            return GetArray<System.Single>("GEAR_EFFICIENCY");
        }
        public List<System.Single> GEAR_RATIO() {
            return GetArray<System.Single>("GEAR_RATIO");
        }
        public System.Single GOOD_SHIFT_SCALE() {
            return GetValue<System.Single>("GOOD_SHIFT_SCALE");
        }
        public System.Single OPTIMAL_SHIFT() {
            return GetValue<System.Single>("OPTIMAL_SHIFT");
        }
        public System.Single SHIFT_SPEED() {
            return GetValue<System.Single>("SHIFT_SPEED");
        }
        public System.Single TORQUE_CONVERTER() {
            return GetValue<System.Single>("TORQUE_CONVERTER");
        }
        public System.Single TORQUE_SPLIT() {
            return GetValue<System.Single>("TORQUE_SPLIT");
        }
        #endregion

    }
}
