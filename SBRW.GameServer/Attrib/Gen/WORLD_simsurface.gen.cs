using System.Collections.Generic;
using VaultLib.CodeGen;
using VaultLib.Core.Data;

// Generated by VaultLib.CodeGen @ November 30, 2019 4:47:29 AM for game WORLD
namespace SBRW.GameServer.Attrib.Gen
{
    public class WORLD_simsurface : CollectionWrapperBase {
        #region Field Names
        public const string Name_ImpactSFX = "ImpactSFX";
        public const string Name_0x0A13D1D5 = "0x0A13D1D5";
        public const string Name_SurfaceFX_ID = "SurfaceFX_ID";
        public const string Name_FFB_SKID = "FFB_SKID";
        public const string Name_Decal = "Decal";
        public const string Name_TireSlideEffects = "TireSlideEffects";
        public const string Name_FFB_DIGRESSION_SCALE = "FFB_DIGRESSION_SCALE";
        public const string Name_0x2ED0292C = "0x2ED0292C";
        public const string Name_0x2F233560 = "0x2F233560";
        public const string Name_FFB_DRIFT_SKID = "FFB_DRIFT_SKID";
        public const string Name_ScrapeFX_ID = "ScrapeFX_ID";
        public const string Name_GROUND_FRICTION = "GROUND_FRICTION";
        public const string Name_0x40885652 = "0x40885652";
        public const string Name_WheelSurfaceEffect = "WheelSurfaceEffect";
        public const string Name_0x46D28968 = "0x46D28968";
        public const string Name_0x474BC551 = "0x474BC551";
        public const string Name_0x4FD1F2B4 = "0x4FD1F2B4";
        public const string Name_LATERAL_GRIP = "LATERAL_GRIP";
        public const string Name_TireSlipEffects = "TireSlipEffects";
        public const string Name_DEBUG_COLOUR = "DEBUG_COLOUR";
        public const string Name_WORLD_FRICTION = "WORLD_FRICTION";
        public const string Name_0x887C9314 = "0x887C9314";
        public const string Name_TireSmokeEffects = "TireSmokeEffects";
        public const string Name_PercentChanceToCatch = "PercentChanceToCatch";
        public const string Name_CollisionSweetenerSFX = "CollisionSweetenerSFX";
        public const string Name_FFB_SLIP = "FFB_SLIP";
        public const string Name_0x92ED6E77 = "0x92ED6E77";
        public const string Name_RenderNoise = "RenderNoise";
        public const string Name_WheelEffectFrequency = "WheelEffectFrequency";
        public const string Name_CollectionName = "CollectionName";
        public const string Name_ROLLING_RESISTANCE = "ROLLING_RESISTANCE";
        public const string Name_MATERIAL_STRENGTH = "MATERIAL_STRENGTH";
        public const string Name_RACECOURSE_MINI_NOS = "RACECOURSE_MINI_NOS";
        public const string Name_DAMAGABLE_OSCULATION = "DAMAGABLE_OSCULATION";
        public const string Name_0xB4C1B2CF = "0xB4C1B2CF";
        public const string Name_WheelEffectIntensity = "WheelEffectIntensity";
        public const string Name_FFB_ROLL = "FFB_ROLL";
        public const string Name_RollFX_ID = "RollFX_ID";
        public const string Name_DRIVE_GRIP = "DRIVE_GRIP";
        public const string Name_0xCBBF75F0 = "0xCBBF75F0";
        public const string Name_0xCDF83544 = "0xCDF83544";
        public const string Name_RugosityFrequency = "RugosityFrequency";
        public const string Name_RugosityAmplitude = "RugosityAmplitude";
        public const string Name_STICK = "STICK";
        public const string Name_RequiteCollisionground = "RequiteCollisionground";
        public const string Name_FFB_DIGRESSION_MIN_CLAMP = "FFB_DIGRESSION_MIN_CLAMP";
        public const string Name_CAMERA_NOISE = "CAMERA_NOISE";
        public const string Name_0xF86A079C = "0xF86A079C";
        public const string Name_TireDriveEffects = "TireDriveEffects";
        #endregion

        public WORLD_simsurface(VLTCollection collection) : base(collection) {}

        #region Getters
        public List<System.Single> CAMERA_NOISE() {
            return GetArray<System.Single>("CAMERA_NOISE");
        }
        public System.String CollectionName() {
            return GetValue<System.String>("CollectionName");
        }
        public VaultLib.CodeGen.RefSpecWrapper CollisionSweetenerSFX() {
            return GetValue<VaultLib.CodeGen.RefSpecWrapper>("CollisionSweetenerSFX");
        }
        public System.Single DAMAGABLE_OSCULATION() {
            return GetValue<System.Single>("DAMAGABLE_OSCULATION");
        }
        public VaultLib.Core.Types.Attrib.Types.Vector4 DEBUG_COLOUR() {
            return GetValue<VaultLib.Core.Types.Attrib.Types.Vector4>("DEBUG_COLOUR");
        }
        public VaultLib.Support.World.VLT.eDecalType Decal() {
            return GetValue<VaultLib.Support.World.VLT.eDecalType>("Decal");
        }
        public System.Single DRIVE_GRIP() {
            return GetValue<System.Single>("DRIVE_GRIP");
        }
        public System.Single FFB_DIGRESSION_MIN_CLAMP() {
            return GetValue<System.Single>("FFB_DIGRESSION_MIN_CLAMP");
        }
        public System.Single FFB_DIGRESSION_SCALE() {
            return GetValue<System.Single>("FFB_DIGRESSION_SCALE");
        }
        public List<VaultLib.Support.World.VLT.FFBWaveRecord> FFB_DRIFT_SKID() {
            return GetArray<VaultLib.Support.World.VLT.FFBWaveRecord>("FFB_DRIFT_SKID");
        }
        public List<VaultLib.Support.World.VLT.FFBWaveRecord> FFB_ROLL() {
            return GetArray<VaultLib.Support.World.VLT.FFBWaveRecord>("FFB_ROLL");
        }
        public List<VaultLib.Support.World.VLT.FFBWaveRecord> FFB_SKID() {
            return GetArray<VaultLib.Support.World.VLT.FFBWaveRecord>("FFB_SKID");
        }
        public List<VaultLib.Support.World.VLT.FFBWaveRecord> FFB_SLIP() {
            return GetArray<VaultLib.Support.World.VLT.FFBWaveRecord>("FFB_SLIP");
        }
        public System.Single field_0x0A13D1D5() {
            return GetValue<System.Single>("0x0A13D1D5");
        }
        public System.Single field_0x2ED0292C() {
            return GetValue<System.Single>("0x2ED0292C");
        }
        public System.Single field_0x2F233560() {
            return GetValue<System.Single>("0x2F233560");
        }
        public System.Boolean field_0x40885652() {
            return GetValue<System.Boolean>("0x40885652");
        }
        public System.Single field_0x46D28968() {
            return GetValue<System.Single>("0x46D28968");
        }
        public System.Single field_0x474BC551() {
            return GetValue<System.Single>("0x474BC551");
        }
        public System.Boolean field_0x4FD1F2B4() {
            return GetValue<System.Boolean>("0x4FD1F2B4");
        }
        public System.Single field_0x887C9314() {
            return GetValue<System.Single>("0x887C9314");
        }
        public System.Single field_0x92ED6E77() {
            return GetValue<System.Single>("0x92ED6E77");
        }
        // unknown type: FXROADNOISE_TRANSITION
        public VaultLib.Core.Types.VLTUnknown field_0xB4C1B2CF() {
            return GetValue<VaultLib.Core.Types.VLTUnknown>("0xB4C1B2CF");
        }
        public System.Single field_0xCBBF75F0() {
            return GetValue<System.Single>("0xCBBF75F0");
        }
        // unknown type: FXROADNOISE_TRANSITION
        public VaultLib.Core.Types.VLTUnknown field_0xCDF83544() {
            return GetValue<VaultLib.Core.Types.VLTUnknown>("0xCDF83544");
        }
        public System.Single field_0xF86A079C() {
            return GetValue<System.Single>("0xF86A079C");
        }
        public System.Single GROUND_FRICTION() {
            return GetValue<System.Single>("GROUND_FRICTION");
        }
        public List<VaultLib.CodeGen.RefSpecWrapper> ImpactSFX() {
            return GetArray<VaultLib.CodeGen.RefSpecWrapper>("ImpactSFX");
        }
        public System.Single LATERAL_GRIP() {
            return GetValue<System.Single>("LATERAL_GRIP");
        }
        public System.Single MATERIAL_STRENGTH() {
            return GetValue<System.Single>("MATERIAL_STRENGTH");
        }
        public System.Single PercentChanceToCatch() {
            return GetValue<System.Single>("PercentChanceToCatch");
        }
        public VaultLib.Support.World.VLT.RUMBLEFX RACECOURSE_MINI_NOS() {
            return GetValue<VaultLib.Support.World.VLT.RUMBLEFX>("RACECOURSE_MINI_NOS");
        }
        // unknown type: RoadNoiseRecord
        public VaultLib.Core.Types.VLTUnknown RenderNoise() {
            return GetValue<VaultLib.Core.Types.VLTUnknown>("RenderNoise");
        }
        public System.Single RequiteCollisionground() {
            return GetValue<System.Single>("RequiteCollisionground");
        }
        public VaultLib.Support.World.VLT.ROLLFX_LOOP RollFX_ID() {
            return GetValue<VaultLib.Support.World.VLT.ROLLFX_LOOP>("RollFX_ID");
        }
        public System.Single ROLLING_RESISTANCE() {
            return GetValue<System.Single>("ROLLING_RESISTANCE");
        }
        public System.Single RugosityAmplitude() {
            return GetValue<System.Single>("RugosityAmplitude");
        }
        public System.Single RugosityFrequency() {
            return GetValue<System.Single>("RugosityFrequency");
        }
        public VaultLib.Support.World.VLT.SCRAPE_SURFACES ScrapeFX_ID() {
            return GetValue<VaultLib.Support.World.VLT.SCRAPE_SURFACES>("ScrapeFX_ID");
        }
        public System.Single STICK() {
            return GetValue<System.Single>("STICK");
        }
        public VaultLib.Support.World.VLT.SURFACE_SFX SurfaceFX_ID() {
            return GetValue<VaultLib.Support.World.VLT.SURFACE_SFX>("SurfaceFX_ID");
        }
        // unknown type: TireEffectRecord
        public List<VaultLib.Core.Types.VLTUnknown> TireDriveEffects() {
            return GetArray<VaultLib.Core.Types.VLTUnknown>("TireDriveEffects");
        }
        // unknown type: TireEffectRecord
        public List<VaultLib.Core.Types.VLTUnknown> TireSlideEffects() {
            return GetArray<VaultLib.Core.Types.VLTUnknown>("TireSlideEffects");
        }
        // unknown type: TireEffectRecord
        public List<VaultLib.Core.Types.VLTUnknown> TireSlipEffects() {
            return GetArray<VaultLib.Core.Types.VLTUnknown>("TireSlipEffects");
        }
        // unknown type: TireTimeEffectRecord
        public List<VaultLib.Core.Types.VLTUnknown> TireSmokeEffects() {
            return GetArray<VaultLib.Core.Types.VLTUnknown>("TireSmokeEffects");
        }
        public System.UInt16 WheelEffectFrequency() {
            return GetValue<System.UInt16>("WheelEffectFrequency");
        }
        public System.Byte WheelEffectIntensity() {
            return GetValue<System.Byte>("WheelEffectIntensity");
        }
        public VaultLib.Support.World.VLT.SurfaceEffectType WheelSurfaceEffect() {
            return GetValue<VaultLib.Support.World.VLT.SurfaceEffectType>("WheelSurfaceEffect");
        }
        public System.Single WORLD_FRICTION() {
            return GetValue<System.Single>("WORLD_FRICTION");
        }
        #endregion

    }
}
